/* hybridCube.wxss - 混合渲染魔方样式 */

.hybrid-cube-container {
  width: 100%;
  height: 600rpx;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  background: #f0f0f0;
}

.scene-3d {
  width: 480rpx;
  height: 480rpx;
  position: relative;
  perspective: 1200px;
  transform-style: preserve-3d;
}

.cube-3d {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transition: transform 0.1s ease-out;
  transform-origin: center center center;
}

/* 魔方面的基础样式 */
.cube-face {
  position: absolute;
  width: 480rpx;
  height: 480rpx;
  border: 2rpx solid #333;
  /* 移除border-radius避免角落露出背景 */
  backface-visibility: hidden;
  transform-style: preserve-3d;
  background: #000;
  padding: 9rpx; /* 保持较小的外边距，让外棱边纤细 */
  box-sizing: border-box;
  transform-origin: center center;
  /* 移除clip-path裁剪，使用顶点圆片提供抗锯齿效果 */
}

.sticker-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 15rpx; /* 从 8rpx 调大，加粗内部线条 */
  width: 100%;
  height: 100%;
}

.sticker {
  width: 100%;
  height: 100%;
  border-radius: 6rpx;
  border: 1rpx solid #333;
}

/* --- 开始：菱形交点样式 --- */
/* 通过裁剪贴纸的边角，使交点处的方形间隙呈现为菱形。 */
/* 裁剪尺寸从 7.5rpx 增加到 10rpx，让菱形更大 */

/* 角落贴纸 */
/* 左上角贴纸：裁剪右下角 */
.sticker:nth-child(1) {
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 10rpx), calc(100% - 10rpx) 100%, 0 100%);
}
/* 右上角贴纸：裁剪左下角 */
.sticker:nth-child(3) {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 10rpx 100%, 0 calc(100% - 10rpx));
}
/* 左下角贴纸：裁剪右上角 */
.sticker:nth-child(7) {
  clip-path: polygon(0 0, calc(100% - 10rpx) 0, 100% 10rpx, 100% 100%, 0 100%);
}
/* 右下角贴纸：裁剪左上角 */
.sticker:nth-child(9) {
  clip-path: polygon(10rpx 0, 100% 0, 100% 100%, 0 100%, 0 10rpx);
}

/* 边缘贴纸 */
/* 上边缘贴纸：裁剪底部两角 */
.sticker:nth-child(2) {
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 10rpx), calc(100% - 10rpx) 100%, 10rpx 100%, 0 calc(100% - 10rpx));
}
/* 左边缘贴纸：裁剪右侧两角 */
.sticker:nth-child(4) {
  clip-path: polygon(0 0, calc(100% - 10rpx) 0, 100% 10rpx, 100% calc(100% - 10rpx), calc(100% - 10rpx) 100%, 0 100%);
}
/* 右边缘贴纸：裁剪左侧两角 */
.sticker:nth-child(6) {
  clip-path: polygon(10rpx 0, 100% 0, 100% 100%, 10rpx 100%, 0 calc(100% - 10rpx), 0 10rpx);
}
/* 下边缘贴纸：裁剪顶部两角 */
.sticker:nth-child(8) {
  clip-path: polygon(10rpx 0, calc(100% - 10rpx) 0, 100% 10rpx, 100% 100%, 0 100%, 0 10rpx);
}

/* 中心贴纸：裁剪所有四角 */
.sticker:nth-child(5) {
  clip-path: polygon(10rpx 0, calc(100% - 10rpx) 0, 100% 10rpx, 100% calc(100% - 10rpx), calc(100% - 10rpx) 100%, 10rpx 100%, 0 calc(100% - 10rpx), 0 10rpx);
}
/* --- 结束：菱形交点样式 --- */

/* 立方体顶点容器 */
.cube-vertex {
  position: absolute;
  pointer-events: none;
  z-index: 10;  /* 降低层级，避免遮挡面板 */
  top: 50%;
  left: 50%;
  transform-origin: center center;
  width: 12rpx;  /* 匹配圆片尺寸 */
  height: 12rpx;
}

/* 顶点圆片 - 抗锯齿效果，只在真实顶点显示 */
.vertex-dot {
  position: absolute;
  width: 12rpx;  /* 减小尺寸降低干扰风险 */
  height: 12rpx;
  border-radius: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 0 0 2rpx rgba(0,0,0,0.1);
}



/* Sticker Colors */
.cube-color-U { background-color: #ffffff; } /* White */
.cube-color-D { background-color: #ffeb3b; } /* Yellow */
.cube-color-F { background-color: #4caf50; } /* Green */
.cube-color-B { background-color: #2196f3; } /* Blue */
.cube-color-L { background-color: #ff9800; } /* Orange */
.cube-color-R { background-color: #e60000; } /* Red - 调整为更鲜艳的红色 */
.cube-color-empty { background-color: #f5f5f5; border: 1rpx solid #ddd;}

/* 前面 - 默认位置 */
.face-front {
  transform: translateZ(240rpx);
}

.face-back {
  transform: rotateY(180deg) translateZ(240rpx);
}

.face-right {
  transform: rotateY(90deg) translateZ(240rpx);
}

.face-left {
  transform: rotateY(-90deg) translateZ(240rpx);
}

.face-up {
  /* 修正：使用-90deg将面旋转到顶部 */
  transform: rotateX(-90deg) translateZ(240rpx);
}

.face-down {
  /* 修正：使用90deg将面旋转到底部 */
  transform: rotateX(90deg) translateZ(240rpx);
}

/* 调试信息 */
.debug-info {
  position: absolute;
  bottom: 20rpx;
  left: 20rpx;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 20rpx;
  border-radius: 10rpx;
  font-size: 24rpx;
  line-height: 1.5;
  z-index: 10;
}

.debug-info text {
  display: block;
  margin-bottom: 8rpx;
}

/* 响应式调整 */
@media screen and (max-width: 375px) {
  .scene-3d {
    width: 420rpx;
    height: 420rpx;
  }
  
  .cube-face {
    width: 420rpx;
    height: 420rpx;
  }
  
  .face-front, .face-back {
    transform: translateZ(210rpx);
  }
  
  .face-right {
    transform: rotateY(90deg) translateZ(210rpx);
  }
  
  .face-left {
    transform: rotateY(-90deg) translateZ(210rpx);
  }
  
  .face-up {
    /* 修正：使用-90deg */
    transform: rotateX(-90deg) translateZ(210rpx);
  }
  
  .face-down {
    /* 修正：使用90deg */
    transform: rotateX(90deg) translateZ(210rpx);
  }
}